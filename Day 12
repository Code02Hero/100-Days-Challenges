#include <stdio.h>
#include <stdlib.h>

int main() {
    int n, i;
    int *arr;

    // Allocate memory using malloc
    n = 5;
    arr = (int *)malloc(n * sizeof(int));
    if (arr == NULL) {
        printf("Memory allocation failed\n");
        return 1;
    }

    // Initialize array using malloc
    for (i = 0; i < n; i++) {
        arr[i] = i + 1;
    }

    // Print the array
    printf("Array elements using malloc: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    // Allocate memory using calloc
    arr = (int *)calloc(n, sizeof(int));
    if (arr == NULL) {
        printf("Memory allocation failed\n");
        return 1;
    }

    // Initialize array using calloc
    for (i = 0; i < n; i++) {
        arr[i] = i + 1;
    }

    // Print the array
    printf("Array elements using calloc: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    // Reallocate memory using realloc
    n = 10;
    arr = (int *)realloc(arr, n * sizeof(int));
    if (arr == NULL) {
        printf("Memory allocation failed\n");
        return 1;
    }

    // Initialize the new part of the array
    for (i = 5; i < n; i++) {
        arr[i] = i + 1;
    }

    // Print the array
    printf("Array elements after realloc: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    // Free the allocated memory
    free(arr);

    return 0;
}
